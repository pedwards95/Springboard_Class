Refactor our Express apps to separate view logic (routing) from model logic (data)
Compare different OO designs for interfacing with our database
Borrow useful ideas from ORMs to build our own model layers!

Why No SQL In Routes?
    You tend to have lots of routes
    It’s nice to centralize validation, schema, etc
    Separation of concerns: routes should be about web-stuff

Object Orientation
    Abstraction
        OO can offer abstraction, the ability to hide implementation details when they aren’t needed.
        Not everyone should have to understand everything
        Only one person has to worry about SQL, validation, etc (you)
    Encapsulation
        OO can offer encapsulation, the ability to group functionality into larger logical pieces.
        Everything related to cat data/functionality lives in Cat, for example
    Polymorphism
        OO can offer polymorphism, the ability to implement similar functionality in different classes.
        The ability to make similar things work similarly
        We could have other kinds of animals with same API
        For example, dogs and cats could both have a speak method, even though it behaves differently for different animals (“Meow” vs “Woof”)

Simple OO Model
    We can make a single class for “all cat-related functions”
    It won’t hold data
    You won’t ever instantiate it!
    All the methods are static (called on Cat)
    Benefit: help organization, gets SQL out of routes

Smarter OO Model
    We can make a more traditional OO class
    You will instantiate it — once per dog!
    It will hold data specific to each dog
        It has static methods
    To get all dogs, get a particular dog
        It has regular methods


Which Is Better?
    “Simple class” (no data, only static methods)
        Can be easier to write class
        Fewer SQL queries may fire (compare delete between Cat and Dog)
        Doing more interesting things can be trickier

    “Smarter class” (data, real methods)
        Real attributes can be handy!
        Easier to do validation
        Can do things like cat.speak() rather than Cat.speak(id)